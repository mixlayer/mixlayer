syntax = "proto3";

package valence; 

// defines 
// * connections between node identifiers 
// * metadata for nodes
message VGraphProto { 
  map<uint32, VNodeInfo> metadata = 1;
  repeated VEdgeProto edges = 2;
}

message VNodeInfo { 
  uint32 node_id = 1;
  VNodeType node_type = 2; 
  string node_operation = 3; 
}

enum VNodeType { 
  NODE_TYPE_UNKNOWN = 0; 
  NODE_TYPE_SOURCE = 1; 
  NODE_TYPE_SINK = 2; 
  NODE_TYPE_TRANSFORM = 3;
  NODE_TYPE_JOIN = 4;
}

message VEdgeProto { 
  uint32 source_node_id = 1; 
  uint32 source_output_port = 2; 
  uint32 dest_input_port = 3;
  uint32 dest_node_id = 4; 
}

message VNodeCtxProto { 
  map<uint32, VNodeInputProto> inputs = 1; 
  map<uint32, VNodeOutputProto> outputs = 2; 
}

message VNodeOutputProto { 
  repeated VEdgeProto edges = 1; 
}

message VNodeInputProto { 
  repeated VEdgeProto edges = 1; 
}

message HttpRequestProto { 
    HttpMethodProto method = 1; 
    string url = 2; 
    repeated HttpHeaderProto headers = 3; 

    //TODO should be a stream 
    bytes body = 4; 
}

message HttpResponseProto { 
  int32 statusCode = 1; 
  repeated HttpHeaderProto headers = 2; 
  bytes body = 3; 
}

message HttpHeaderProto { 
  string headerName = 1;
  string headerValue = 2;
}

//TODO add rest
enum HttpMethodProto { 
  HTTP_METHOD_UNKNOWN = 0;
  HTTP_METHOD_GET = 1;
  HTTP_METHOD_POST = 2; 
  HTTP_METHOD_PUT = 3;
  HTTP_METHOD_PATCH = 4;
}